server:
  port: 8080

spring:
  application:
    name: loopin-application
  output:
    ansi:
      enabled: ALWAYS
  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 52MB
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}  # 환경 변수 사용 권장
      secret-key: ${AWS_SECRET_ACCESS_KEY}
      region:
        static: ap-northeast-2  # AWS 서울 리전
      s3:
        bucket: loopin-bucket-v1 # S3 버킷명

custom:
  jwt:
    secretKey: ${JWT_SECRET_KEY}
  accessToken:
    expiration: "#{4 * 30 * 7 * 24 * 60 * 60 * 1000}"   # 4달
  refreshToken:
    expiration: "#{6 * 30 * 7 * 24 * 60 * 60 * 1000}"   # 6달

frontend:
  redirect:
    local: http://local.loopin.co.kr/login
    dev: https://develop.loopin.co.kr/login
    prod: https://loopin.co.kr/login

oauth:
  state:
    secret: ${OAUTH_STATE_SECRET}

mail:
  host: smtp.gmail.com
  port: 587
  username: capstone2025letzgo@gmail.com
  password: ${MAIL_APP_PASSWORD}
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
          required: true
        connection-timeout: 5000
        timeout: 5000
        write-timeout: 5000
  code-expiration-millis: 600000  #코드 만료기간: 10분

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui
    config-url: /v3/api-docs/swagger-config
    url: /v3/api-docs
    groups-order: DESC
    operations-sorter: method
    tags-sorter: alpha
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

security:
  auth:
    dummy-password: "{noop}social-user"  # 실제 인증에 쓰이지 않지만, 빈값 방지용
